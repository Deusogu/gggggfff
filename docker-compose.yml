version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: cheat-marketplace-db
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-secretpassword}
      MONGO_INITDB_DATABASE: cheat-marketplace
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - marketplace-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cheat-marketplace-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:${MONGO_PASSWORD:-secretpassword}@mongodb:27017/cheat-marketplace?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      LITECOIN_API_KEY: ${LITECOIN_API_KEY}
      LITECOIN_WALLET_ADDRESS: ${LITECOIN_WALLET_ADDRESS}
      LITECOIN_WEBHOOK_SECRET: ${LITECOIN_WEBHOOK_SECRET}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      BOT_API_KEY: ${BOT_API_KEY}
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    networks:
      - marketplace-network
    volumes:
      - ./backend/uploads:/app/uploads

  # Frontend Next.js App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cheat-marketplace-frontend
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: ${API_URL:-http://localhost:5000/api}
      NEXT_PUBLIC_SOCKET_URL: ${SOCKET_URL:-http://localhost:5000}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - marketplace-network

  # Discord Bot
  discord-bot:
    build:
      context: ./discord-bot
      dockerfile: Dockerfile
    container_name: cheat-marketplace-bot
    restart: unless-stopped
    environment:
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      API_BASE_URL: http://backend:5000/api
      API_KEY: ${BOT_API_KEY}
    depends_on:
      - backend
    networks:
      - marketplace-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: cheat-marketplace-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - marketplace-network

volumes:
  mongodb_data:
    driver: local

networks:
  marketplace-network:
    driver: bridge
