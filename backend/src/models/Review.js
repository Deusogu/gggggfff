const mongoose = require('mongoose');

const reviewSchema = new mongoose.Schema({
  orderId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Order',
    required: true,
    unique: true // One review per order
  },
  productId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Product',
    required: true,
    index: true
  },
  buyerEmail: {
    type: String,
    required: true,
    lowercase: true,
    trim: true
  },
  rating: {
    type: Number,
    required: true,
    min: 1,
    max: 5
  },
  comment: {
    type: String,
    maxlength: [1000, 'Review comment cannot exceed 1000 characters'],
    trim: true
  },
  isAutoGenerated: {
    type: Boolean,
    default: false
  },
  helpful: {
    type: Number,
    default: 0
  },
  notHelpful: {
    type: Number,
    default: 0
  }
}, {
  timestamps: true
});

// Indexes
reviewSchema.index({ productId: 1, createdAt: -1 });
reviewSchema.index({ buyerEmail: 1 });
reviewSchema.index({ orderId: 1 });

// Static method to create auto review after 31 days
reviewSchema.statics.createAutoReview = async function(orderId, productId, buyerEmail) {
  try {
    const existingReview = await this.findOne({ orderId });
    if (existingReview) {
      return null; // Review already exists
    }

    const review = await this.create({
      orderId,
      productId,
      buyerEmail,
      rating: 5,
      comment: 'Auto-generated review after 31 days',
      isAutoGenerated: true
    });

    // Update product rating
    const Product = mongoose.model('Product');
    const product = await Product.findById(productId);
    if (product) {
      await product.updateRating(5, true);
    }

    return review;
  } catch (error) {
    console.error('Error creating auto review:', error);
    return null;
  }
};

// Method to mark review as helpful/not helpful
reviewSchema.methods.markHelpfulness = async function(isHelpful) {
  if (isHelpful) {
    this.helpful += 1;
  } else {
    this.notHelpful += 1;
  }
  return await this.save();
};

const Review = mongoose.model('Review', reviewSchema);

module.exports = Review;
